ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usb_class_midi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ctl_callback,"ax",%progbits
  18              		.align	1
  19              		.global	ctl_callback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	ctl_callback:
  25              	.LVL0:
  26              	.LFB36:
  27              		.file 1 "usb_class_midi.c"
   1:usb_class_midi.c **** #include "usb_lib.h"
   2:usb_class_midi.c **** #include <wchar.h>
   3:usb_class_midi.c **** #include "hardware.h"
   4:usb_class_midi.c **** #include "midi_message_buffer.h"
   5:usb_class_midi.c **** #include "sysex.h"
   6:usb_class_midi.c **** 
   7:usb_class_midi.c **** #define ENDP_DATA_IN 1
   8:usb_class_midi.c **** #define ENDP_DATA_OUT 2
   9:usb_class_midi.c **** #define ENDP_DATA_SIZE 16
  10:usb_class_midi.c **** 
  11:usb_class_midi.c **** #define ENDP_CTL_NUM  3
  12:usb_class_midi.c **** #define ENDP_CTL_SIZE 8
  13:usb_class_midi.c **** 
  14:usb_class_midi.c **** #define STD_DESCR_LANG 0
  15:usb_class_midi.c **** #define STD_DESCR_VEND 1
  16:usb_class_midi.c **** #define STD_DESCR_PROD 2
  17:usb_class_midi.c **** #define STD_DESCR_SN   3
  18:usb_class_midi.c **** 
  19:usb_class_midi.c **** #define USB_VID 0x16C0
  20:usb_class_midi.c **** #define USB_PID 0x05DF
  21:usb_class_midi.c **** 
  22:usb_class_midi.c **** #define DEVCLASS_AUDIO        0x01
  23:usb_class_midi.c **** #define DEVSUBCLASS_MIDI      0x03
  24:usb_class_midi.c **** #define CDCCLASS_DATA         0x0A
  25:usb_class_midi.c **** #define CDCPROTOCOL_UNDEF     0x00
  26:usb_class_midi.c **** #define CDCPROTOCOL_VENDOR    0xFF
  27:usb_class_midi.c **** 
  28:usb_class_midi.c **** USB_ALIGN static const uint8_t USB_DeviceDescriptor[] = {
  29:usb_class_midi.c ****   ARRLEN1(
  30:usb_class_midi.c ****   bLENGTH,     // bLength
  31:usb_class_midi.c ****   USB_DESCR_DEVICE,   // bDescriptorType - Device descriptor
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 2


  32:usb_class_midi.c ****   USB_U16(0x0110), // bcdUSB
  33:usb_class_midi.c ****   0,   // bDevice Class
  34:usb_class_midi.c ****   0,   // bDevice SubClass
  35:usb_class_midi.c ****   0,   // bDevice Protocol
  36:usb_class_midi.c ****   USB_EP0_BUFSZ,   // bMaxPacketSize0
  37:usb_class_midi.c ****   USB_U16( USB_VID ), // idVendor
  38:usb_class_midi.c ****   USB_U16( USB_PID ), // idProduct
  39:usb_class_midi.c ****   USB_U16( 1 ), // bcdDevice_Ver
  40:usb_class_midi.c ****   STD_DESCR_VEND,   // iManufacturer
  41:usb_class_midi.c ****   STD_DESCR_PROD,   // iProduct
  42:usb_class_midi.c ****   STD_DESCR_SN,   // iSerialNumber
  43:usb_class_midi.c ****   1    // bNumConfigurations
  44:usb_class_midi.c ****   )
  45:usb_class_midi.c **** };
  46:usb_class_midi.c **** 
  47:usb_class_midi.c **** USB_ALIGN static const uint8_t USB_DeviceQualifierDescriptor[] = {
  48:usb_class_midi.c ****   ARRLEN1(
  49:usb_class_midi.c ****   bLENGTH,     //bLength
  50:usb_class_midi.c ****   USB_DESCR_QUALIFIER,   // bDescriptorType - Device qualifier
  51:usb_class_midi.c ****   USB_U16(0x0200), // bcdUSB
  52:usb_class_midi.c ****   0,   // bDeviceClass
  53:usb_class_midi.c ****   0,   // bDeviceSubClass
  54:usb_class_midi.c ****   0,   // bDeviceProtocol
  55:usb_class_midi.c ****   USB_EP0_BUFSZ,   // bMaxPacketSize0
  56:usb_class_midi.c ****   1,   // bNumConfigurations
  57:usb_class_midi.c ****   0x00    // Reserved
  58:usb_class_midi.c ****   )
  59:usb_class_midi.c **** };
  60:usb_class_midi.c **** 
  61:usb_class_midi.c **** USB_ALIGN static const uint8_t USB_ConfigDescriptor[] = {
  62:usb_class_midi.c ****   ARRLEN34(
  63:usb_class_midi.c ****   ARRLEN1(
  64:usb_class_midi.c ****     bLENGTH, // bLength: Configuration Descriptor size
  65:usb_class_midi.c ****     USB_DESCR_CONFIG,    //bDescriptorType: Configuration
  66:usb_class_midi.c ****     wTOTALLENGTH, //wTotalLength
  67:usb_class_midi.c ****     2, // bNumInterfaces
  68:usb_class_midi.c ****     1, // bConfigurationValue: Configuration value
  69:usb_class_midi.c ****     0, // iConfiguration: Index of string descriptor describing the configuration
  70:usb_class_midi.c ****     0x80, // bmAttributes: bus powered
  71:usb_class_midi.c ****     0x32, // MaxPower 100 mA
  72:usb_class_midi.c ****   )
  73:usb_class_midi.c ****   ARRLEN1(//CDC control Interface
  74:usb_class_midi.c ****     bLENGTH, // bLength
  75:usb_class_midi.c ****     USB_DESCR_INTERFACE, // bDescriptorType
  76:usb_class_midi.c ****     0, // bInterfaceNumber
  77:usb_class_midi.c ****     0, // bAlternateSetting
  78:usb_class_midi.c ****     1, // bNumEndpoints
  79:usb_class_midi.c ****     DEVCLASS_AUDIO, // bInterfaceClass: 
  80:usb_class_midi.c ****     DEVSUBCLASS_MIDI, // bInterfaceSubClass: 
  81:usb_class_midi.c ****     CDCPROTOCOL_UNDEF, // bInterfaceProtocol: 
  82:usb_class_midi.c ****     0x00, // iInterface
  83:usb_class_midi.c ****   )
  84:usb_class_midi.c ****     ARRLEN1(//MS Header
  85:usb_class_midi.c ****       bLENGTH, //bLength
  86:usb_class_midi.c ****       USB_DESCR_CS_INTERFACE, //bDescriptorType
  87:usb_class_midi.c ****       0x01, //bDescriptorSubType
  88:usb_class_midi.c ****       USB_U16(0x0100), //bcdMIDI
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 3


  89:usb_class_midi.c ****       USB_U16(0x002C), //wTotalLength
  90:usb_class_midi.c ****     )
  91:usb_class_midi.c ****     ARRLEN1( //MIDI In Jack descriptor
  92:usb_class_midi.c ****       bLENGTH,
  93:usb_class_midi.c ****       USB_DESCR_CS_INTERFACE,
  94:usb_class_midi.c ****       0x02, ///bDescriptorSubType - MIDI In Jack
  95:usb_class_midi.c ****       0x01, //bJackType
  96:usb_class_midi.c ****       0x01, //bJackID
  97:usb_class_midi.c ****       0, //iJack
  98:usb_class_midi.c ****     )
  99:usb_class_midi.c ****     ARRLEN1( //MIDI Out Jack Descriptor
 100:usb_class_midi.c ****       bLENGTH,
 101:usb_class_midi.c ****       USB_DESCR_CS_INTERFACE,
 102:usb_class_midi.c ****       0x03, //bDescriptorSubType
 103:usb_class_midi.c ****       0x01, //bJackType
 104:usb_class_midi.c ****       0x02, //bJackID
 105:usb_class_midi.c ****       0x01, //bNrInputPins
 106:usb_class_midi.c ****       0x02, //BaSourceID
 107:usb_class_midi.c ****       0x01, //BaSourcePin
 108:usb_class_midi.c ****       0, //iJack
 109:usb_class_midi.c ****     )
 110:usb_class_midi.c ****     ARRLEN1(//Standard Bulk IN endpoint descriptor
 111:usb_class_midi.c ****       bLENGTH, //bLength
 112:usb_class_midi.c ****       USB_DESCR_ENDPOINT, //bDescriptorType
 113:usb_class_midi.c ****       0x81,
 114:usb_class_midi.c ****       USB_ENDP_INTR,
 115:usb_class_midi.c ****       USB_U16(ENDP_DATA_SIZE),
 116:usb_class_midi.c ****       0x0A, //bInterval
 117:usb_class_midi.c ****       0, //bRefresh
 118:usb_class_midi.c ****       0, //bSyncAddress
 119:usb_class_midi.c ****     )
 120:usb_class_midi.c ****     ARRLEN1(//MS Class specific endpoint descriptor
 121:usb_class_midi.c ****       bLENGTH, //bLength
 122:usb_class_midi.c ****       0x25,  //bDescriptorType
 123:usb_class_midi.c ****       0x01,  //bDescriptorSubtype
 124:usb_class_midi.c ****       0x01,  //bNumEmbMIDIJack (0)
 125:usb_class_midi.c ****       0x01,  //baAssocJackID (0)
 126:usb_class_midi.c ****     )
 127:usb_class_midi.c ****     ARRLEN1(//Standard Bulk OUT endpoint descriptor
 128:usb_class_midi.c ****       bLENGTH, //bLength
 129:usb_class_midi.c ****       USB_DESCR_ENDPOINT, //bDescriptorType
 130:usb_class_midi.c ****       0x01,
 131:usb_class_midi.c ****       USB_ENDP_INTR,
 132:usb_class_midi.c ****       USB_U16(ENDP_DATA_SIZE),
 133:usb_class_midi.c ****       0x0A, //bInterval
 134:usb_class_midi.c ****       0, //bRefresh
 135:usb_class_midi.c ****       0, //bSyncAddress
 136:usb_class_midi.c ****     )
 137:usb_class_midi.c ****     ARRLEN1(//MS Class specific endpoint descriptor
 138:usb_class_midi.c ****       bLENGTH, //bLength
 139:usb_class_midi.c ****       0x25,  //bDescriptorType
 140:usb_class_midi.c ****       0x01,  //bDescriptorSubtype
 141:usb_class_midi.c ****       0x01,  //bNumEmbMIDIJack (0)
 142:usb_class_midi.c ****       0x02,  //baAssocJackID (0)
 143:usb_class_midi.c ****     )
 144:usb_class_midi.c ****   )
 145:usb_class_midi.c **** };
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 4


 146:usb_class_midi.c **** 
 147:usb_class_midi.c **** USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 148:usb_class_midi.c **** USB_STRING(USB_StringManufacturingDescriptor, u"piotrosiotr"); //Vendor
 149:usb_class_midi.c **** USB_STRING(USB_StringProdDescriptor, u"USB MIDI"); //Product
 150:usb_class_midi.c **** USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 151:usb_class_midi.c **** 
 152:usb_class_midi.c **** void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
 153:usb_class_midi.c ****   switch(descr & 0xFF00){
 154:usb_class_midi.c ****     case DEVICE_DESCRIPTOR:
 155:usb_class_midi.c ****       *data = &USB_DeviceDescriptor;
 156:usb_class_midi.c ****       *size = sizeof(USB_DeviceDescriptor);
 157:usb_class_midi.c ****       break;
 158:usb_class_midi.c ****     case CONFIGURATION_DESCRIPTOR:
 159:usb_class_midi.c ****       *data = &USB_ConfigDescriptor;
 160:usb_class_midi.c ****       *size = sizeof(USB_ConfigDescriptor);
 161:usb_class_midi.c ****       break;
 162:usb_class_midi.c ****     case DEVICE_QUALIFIER_DESCRIPTOR:
 163:usb_class_midi.c ****       *data = &USB_DeviceQualifierDescriptor;
 164:usb_class_midi.c ****       *size = USB_DeviceQualifierDescriptor[0];
 165:usb_class_midi.c ****       break;
 166:usb_class_midi.c ****     case STRING_DESCRIPTOR:
 167:usb_class_midi.c ****       switch(descr & 0xFF){
 168:usb_class_midi.c ****         case STD_DESCR_LANG:
 169:usb_class_midi.c ****           *data = &USB_StringLangDescriptor;
 170:usb_class_midi.c ****           break;
 171:usb_class_midi.c ****         case STD_DESCR_VEND:
 172:usb_class_midi.c ****           *data = &USB_StringManufacturingDescriptor;
 173:usb_class_midi.c ****           break;
 174:usb_class_midi.c ****         case STD_DESCR_PROD:
 175:usb_class_midi.c ****           *data = &USB_StringProdDescriptor;
 176:usb_class_midi.c ****           break;
 177:usb_class_midi.c ****         case STD_DESCR_SN:
 178:usb_class_midi.c ****           *data = &USB_StringSerialDescriptor;
 179:usb_class_midi.c ****           break;
 180:usb_class_midi.c ****         default:
 181:usb_class_midi.c ****           return;
 182:usb_class_midi.c ****       }
 183:usb_class_midi.c ****       *size = ((uint8_t*)*data)[0]; //data->bLength
 184:usb_class_midi.c ****       break;
 185:usb_class_midi.c ****     default:
 186:usb_class_midi.c ****       break;
 187:usb_class_midi.c ****   }
 188:usb_class_midi.c **** }
 189:usb_class_midi.c **** 
 190:usb_class_midi.c **** uint8_t out_buf_data[4*4];
 191:usb_class_midi.c **** midi_msg_buffer_t out_buf;
 192:usb_class_midi.c **** 
 193:usb_class_midi.c **** char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 194:usb_class_midi.c ****   if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 195:usb_class_midi.c ****     
 196:usb_class_midi.c ****   }
 197:usb_class_midi.c ****   return 0;
 198:usb_class_midi.c **** }
 199:usb_class_midi.c **** 
 200:usb_class_midi.c **** char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 201:usb_class_midi.c ****   if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 202:usb_class_midi.c ****     
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 5


 203:usb_class_midi.c ****   }
 204:usb_class_midi.c ****   return 0;
 205:usb_class_midi.c **** }
 206:usb_class_midi.c **** 
 207:usb_class_midi.c **** void ctl_callback(uint8_t epnum){
  28              		.loc 1 207 33 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 208:usb_class_midi.c ****   
 209:usb_class_midi.c **** }
  33              		.loc 1 209 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE36:
  38              		.section	.text.data_in_callback,"ax",%progbits
  39              		.align	1
  40              		.global	data_in_callback
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  45              	data_in_callback:
  46              	.LVL1:
  47              	.LFB38:
 210:usb_class_midi.c **** 
 211:usb_class_midi.c **** void data_out_callback(uint8_t epnum){
 212:usb_class_midi.c ****   USB_ALIGN uint8_t buf[ ENDP_DATA_SIZE ];
 213:usb_class_midi.c ****   int len = usb_ep_read_double( ENDP_DATA_OUT, (uint16_t*)buf);
 214:usb_class_midi.c ****   if(len == 0)return;
 215:usb_class_midi.c ****   if(buf[0]!= SYSEX_HEADER) return;
 216:usb_class_midi.c ****   if(buf[1]!= SYSEX_MY_ID) return;
 217:usb_class_midi.c ****   if(buf[ENDP_DATA_SIZE-1]!= SYSEX_EOM) return;
 218:usb_class_midi.c **** }
 219:usb_class_midi.c **** 
 220:usb_class_midi.c **** void data_in_callback(uint8_t epnum){
  48              		.loc 1 220 37 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
 221:usb_class_midi.c ****   //USB_ALIGN uint8_t b_on_cmd[] = {0x08, 0x80, 60, 127};
 222:usb_class_midi.c ****   //usb_ep_write_double( ENDP_DATA_IN | 0x80, (uint16_t*)b_on_cmd, sizeof(b_on_cmd));
 223:usb_class_midi.c **** }
  53              		.loc 1 223 1 view .LVU3
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE38:
  58              		.section	.text.data_out_callback,"ax",%progbits
  59              		.align	1
  60              		.global	data_out_callback
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	data_out_callback:
  66              	.LVL2:
  67              	.LFB37:
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 6


 211:usb_class_midi.c ****   USB_ALIGN uint8_t buf[ ENDP_DATA_SIZE ];
  68              		.loc 1 211 38 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 16
  71              		@ frame_needed = 0, uses_anonymous_args = 0
 211:usb_class_midi.c ****   USB_ALIGN uint8_t buf[ ENDP_DATA_SIZE ];
  72              		.loc 1 211 38 is_stmt 0 view .LVU5
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0002 84B0     		sub	sp, sp, #16
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 24
 212:usb_class_midi.c ****   int len = usb_ep_read_double( ENDP_DATA_OUT, (uint16_t*)buf);
  81              		.loc 1 212 3 is_stmt 1 view .LVU6
 213:usb_class_midi.c ****   if(len == 0)return;
  82              		.loc 1 213 3 view .LVU7
  83              	.LVL3:
  84              	.LBB4:
  85              	.LBI4:
  86              		.file 2 "usb_lib.h"
   1:usb_lib.h     **** //24.07.2022
   2:usb_lib.h     **** #ifndef __USB_LIB_H__
   3:usb_lib.h     **** #define __USB_LIB_H__
   4:usb_lib.h     **** 
   5:usb_lib.h     **** /*************************************************************************************
   6:usb_lib.h     ****  *************************************************************************************
   7:usb_lib.h     ****  ****   SETTINGS  ********************************************************************
   8:usb_lib.h     ****  *************************************************************************************
   9:usb_lib.h     ****  *************************************************************************************
  10:usb_lib.h     ****  */
  11:usb_lib.h     **** 
  12:usb_lib.h     **** #define USB_EP0_BUFSZ   8
  13:usb_lib.h     **** //#define USBLIB_SOF_ENABLE
  14:usb_lib.h     **** 
  15:usb_lib.h     **** 
  16:usb_lib.h     **** /*************************************************************************************
  17:usb_lib.h     ****  *************************************************************************************
  18:usb_lib.h     ****  ****   AVAIBLE FUNCIONS (from core)  ************************************************
  19:usb_lib.h     ****  *************************************************************************************
  20:usb_lib.h     ****  *************************************************************************************
  21:usb_lib.h     ****  */
  22:usb_lib.h     **** #include <stdint.h>
  23:usb_lib.h     **** #define USB_ENDP_CTRL 0x00
  24:usb_lib.h     **** #define USB_ENDP_ISO  0x01
  25:usb_lib.h     **** #define USB_ENDP_BULK 0x02
  26:usb_lib.h     **** #define USB_ENDP_INTR 0x03
  27:usb_lib.h     **** 
  28:usb_lib.h     **** 
  29:usb_lib.h     **** typedef void(*epfunc_t)(uint8_t epnum);
  30:usb_lib.h     **** typedef struct{
  31:usb_lib.h     ****   uint8_t bmRequestType;
  32:usb_lib.h     ****   uint8_t bRequest;
  33:usb_lib.h     ****   uint16_t wValue;
  34:usb_lib.h     ****   uint16_t wIndex;
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 7


  35:usb_lib.h     ****   uint16_t wLength;
  36:usb_lib.h     **** }config_pack_t;
  37:usb_lib.h     **** 
  38:usb_lib.h     **** //usb_lib.c
  39:usb_lib.h     **** #define USB_ALIGN __attribute__ ((aligned (2)))
  40:usb_lib.h     **** void USB_setup();
  41:usb_lib.h     **** void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func);
  42:usb_lib.h     **** void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func);
  43:usb_lib.h     **** static void usb_ep_write(uint8_t epnum, const uint16_t *buf, uint16_t size);
  44:usb_lib.h     **** static void usb_ep_write_double(uint8_t epnum, const uint16_t *buf, uint16_t size);
  45:usb_lib.h     **** static int usb_ep_read(uint8_t epnum, uint16_t *buf);
  46:usb_lib.h     **** static int usb_ep_read_double(uint8_t epnum, uint16_t *buf);
  47:usb_lib.h     **** #define usb_ep_ready(epnum)
  48:usb_lib.h     **** 
  49:usb_lib.h     **** /*************************************************************************************
  50:usb_lib.h     ****  *************************************************************************************
  51:usb_lib.h     ****  ****  REQUIRED FUNCTIONS  ***********************************************************
  52:usb_lib.h     ****  *************************************************************************************
  53:usb_lib.h     ****  *************************************************************************************
  54:usb_lib.h     ****  */
  55:usb_lib.h     **** 
  56:usb_lib.h     **** //usb_class_get_std_descr (required!)
  57:usb_lib.h     **** //Return standard descriptors
  58:usb_lib.h     **** //  descr - descriptor index (USB_DESCR_DEVICE, USB_DESCR_CONFIG, etc)
  59:usb_lib.h     **** //  data - return data
  60:usb_lib.h     **** //  size - descriptor length
  61:usb_lib.h     **** void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size);
  62:usb_lib.h     **** //usb_class_init (optional)
  63:usb_lib.h     **** //Funcation callen on usb connect
  64:usb_lib.h     **** void usb_class_init();
  65:usb_lib.h     **** //usb_class_disconnect (optional)
  66:usb_lib.h     **** //Function called on usb disconnect
  67:usb_lib.h     **** void usb_class_disconnect();
  68:usb_lib.h     **** //usb_class_poll (optional)
  69:usb_lib.h     **** //Function called periodically from main()
  70:usb_lib.h     **** void usb_class_poll();
  71:usb_lib.h     **** //usb_class_sof (optional, enabled by USBLIB_SOF_ENABLE macro)
  72:usb_lib.h     **** //Function called periodically by USB SOF event (every 1 ms)
  73:usb_lib.h     **** void usb_class_sof();
  74:usb_lib.h     **** //usb_class_ep0_in (optional)
  75:usb_lib.h     **** //IN request of endpoint 0
  76:usb_lib.h     **** //  req - request
  77:usb_lib.h     **** //  data - requrn data
  78:usb_lib.h     **** //  size - size of return data
  79:usb_lib.h     **** //return value: 0 - request not processed
  80:usb_lib.h     **** //              1 - request processed
  81:usb_lib.h     **** char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size);
  82:usb_lib.h     **** //usb_class_ep0_out (optional)
  83:usb_lib.h     **** //OUT request of endpoint 0
  84:usb_lib.h     **** //  req - request
  85:usb_lib.h     **** //  offset - offset of received payload
  86:usb_lib.h     **** //  size - size of received payload
  87:usb_lib.h     **** //return value: 0 - request not processed
  88:usb_lib.h     **** //              1 - request processed (usb_ep_read(0, &data) called)
  89:usb_lib.h     **** char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size);
  90:usb_lib.h     **** 
  91:usb_lib.h     **** /*************************************************************************************
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 8


  92:usb_lib.h     ****  *************************************************************************************
  93:usb_lib.h     ****  ****  AUXILIARY FUNTIONS AND CONSTANTS   ********************************************
  94:usb_lib.h     ****  *************************************************************************************
  95:usb_lib.h     ****  *************************************************************************************
  96:usb_lib.h     ****  */
  97:usb_lib.h     **** 
  98:usb_lib.h     **** #define USB_DESCR_DEVICE    0x01
  99:usb_lib.h     **** #define USB_DESCR_CONFIG    0x02
 100:usb_lib.h     **** #define USB_DESCR_STRING    0x03
 101:usb_lib.h     **** #define USB_DESCR_INTERFACE 0x04
 102:usb_lib.h     **** #define USB_DESCR_ENDPOINT  0x05
 103:usb_lib.h     **** #define USB_DESCR_QUALIFIER 0x06
 104:usb_lib.h     **** #define USB_DESCR_OTHER_SPEED 0x07
 105:usb_lib.h     **** #define USB_DESCR_INTERFACE_POWER 0x08
 106:usb_lib.h     **** #define USB_DESCR_HID       0x21
 107:usb_lib.h     **** #define USB_DESCR_HID_REPORT  0x22
 108:usb_lib.h     **** #define USB_DESCR_CS_INTERFACE 0x24
 109:usb_lib.h     **** #define USB_DESCR_ENDP_ISO  0x25
 110:usb_lib.h     **** 
 111:usb_lib.h     **** #define USB_STRING(name, str)                    \
 112:usb_lib.h     **** USB_ALIGN static const struct name{                        \
 113:usb_lib.h     ****         uint8_t  bLength;                        \
 114:usb_lib.h     ****         uint8_t  bDescriptorType;                \
 115:usb_lib.h     ****         uint16_t bString[(sizeof(str) - 2) / 2]; \
 116:usb_lib.h     **** }name = {sizeof(name), USB_DESCR_STRING, str}
 117:usb_lib.h     **** 
 118:usb_lib.h     **** #define USB_U16(x) ((x)&0xFF), (((x)>>8)&0xFF)
 119:usb_lib.h     **** #define USB_U24(x) ((x)&0xFF), (((x)>>8)&0xFF), (((x)>>16)&0xFF)
 120:usb_lib.h     **** 
 121:usb_lib.h     **** #define USB_REQ_STANDARD  0x00
 122:usb_lib.h     **** #define USB_REQ_CLASS     0x20
 123:usb_lib.h     **** #define USB_REQ_VENDOR    0x40
 124:usb_lib.h     **** 
 125:usb_lib.h     **** #define USB_REQ_DEVICE    0x00
 126:usb_lib.h     **** #define USB_REQ_INTERFACE 0x01
 127:usb_lib.h     **** #define USB_REQ_ENDPOINT  0x02
 128:usb_lib.h     **** #define USB_REQ_OTHER     0x03
 129:usb_lib.h     **** // bRequest, standard; for bmRequestType == 0x80
 130:usb_lib.h     **** #define GET_STATUS                      0x00
 131:usb_lib.h     **** #define GET_DESCRIPTOR                  0x06
 132:usb_lib.h     **** #define GET_CONFIGURATION               0x08
 133:usb_lib.h     **** #define SET_FEAUTRE                     0x09
 134:usb_lib.h     **** #define SET_IDLE_REQUEST                0x0a
 135:usb_lib.h     **** 
 136:usb_lib.h     **** // for bmRequestType == 0
 137:usb_lib.h     **** #define CLEAR_FEATURE                   0x01
 138:usb_lib.h     **** #define SET_FEATURE                     0x03 
 139:usb_lib.h     **** #define SET_ADDRESS                     0x05
 140:usb_lib.h     **** #define SET_DESCRIPTOR                  0x07
 141:usb_lib.h     **** #define SET_CONFIGURATION               0x09
 142:usb_lib.h     **** // for bmRequestType == 0x81, 1 or 0xB2
 143:usb_lib.h     **** #define GET_INTERFACE                   0x0A
 144:usb_lib.h     **** #define SET_INTERFACE                   0x0B
 145:usb_lib.h     **** #define SYNC_FRAME                      0x0C
 146:usb_lib.h     **** #define VENDOR_REQUEST                  0x01
 147:usb_lib.h     **** 
 148:usb_lib.h     **** // standard descriptors (wValue = DESCR_TYPE<<8 | DESCR_INDEX)
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 9


 149:usb_lib.h     **** #define DEVICE_DESCRIPTOR               0x0100
 150:usb_lib.h     **** #define CONFIGURATION_DESCRIPTOR        0x0200
 151:usb_lib.h     **** #define STRING_DESCRIPTOR               0x0300
 152:usb_lib.h     **** #define DEVICE_QUALIFIER_DESCRIPTOR     0x0600
 153:usb_lib.h     **** #define HID_REPORT_DESCRIPTOR           0x2200
 154:usb_lib.h     **** 
 155:usb_lib.h     **** #include <stm32f1xx.h>
 156:usb_lib.h     **** #define USB_EPx(num) (((volatile uint16_t*)USB)[(num)*2])
 157:usb_lib.h     **** 
 158:usb_lib.h     **** #undef usb_ep_ready
 159:usb_lib.h     **** #define usb_ep_ready(epnum) (\
 160:usb_lib.h     ****   (((epnum) & 0x80) && ((USB_EPx((epnum) & 0x0F) & USB_EPTX_STAT) != USB_EP_TX_VALID) ) || \
 161:usb_lib.h     ****   (!((epnum)& 0x80) && ((USB_EPx((epnum) & 0x0F) & USB_EPRX_STAT) == USB_EP_RX_NAK) ) \
 162:usb_lib.h     ****   )
 163:usb_lib.h     **** 
 164:usb_lib.h     **** 
 165:usb_lib.h     **** #define _ARRLEN1(ign, x...) (1+sizeof((uint8_t[]){x})), x
 166:usb_lib.h     **** #define __ARRLEN34(x1, x2, i3, i4, x...) x1, x2, USB_U16(4+sizeof((uint8_t[]){x})), x
 167:usb_lib.h     **** #define _ARRLEN34(x1, x2, i3, i4, x...) __ARRLEN34(x1, x2, i3, i4, x)
 168:usb_lib.h     **** #define __ARRLEN67(x1, x2, x3, x4, x5, i6, i7, x...) x1, x2, x3, x4, x5, USB_U16(7+sizeof((uint8_t[
 169:usb_lib.h     **** #define _ARRLEN67(x1, x2, x3, x4, x5, i6, i7, x...) __ARRLEN67(x1, x2, x3, x4, x5, i6, i7, x)
 170:usb_lib.h     **** #define ARRLEN1(ign, x...) _ARRLEN1(ign, x)
 171:usb_lib.h     **** #define ARRLEN34(x) _ARRLEN34(x)
 172:usb_lib.h     **** #define ARRLEN67(x) _ARRLEN67(x)
 173:usb_lib.h     **** 
 174:usb_lib.h     **** #define bLENGTH 0
 175:usb_lib.h     **** #define wTOTALLENGTH 0,0
 176:usb_lib.h     **** 
 177:usb_lib.h     **** #define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | U
 178:usb_lib.h     **** 
 179:usb_lib.h     **** void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size);
 180:usb_lib.h     **** static inline void usb_ep_write(uint8_t epnum, const uint16_t *buf, uint16_t size){
 181:usb_lib.h     ****   _usb_ep_write((epnum & 0x0F)*2, buf, size);
 182:usb_lib.h     **** }
 183:usb_lib.h     **** 
 184:usb_lib.h     **** static inline void usb_ep_write_double(uint8_t epnum, const uint16_t *buf, uint16_t size){
 185:usb_lib.h     ****   epnum &= 0x0F;
 186:usb_lib.h     ****   uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 187:usb_lib.h     ****   idx += 2*epnum;
 188:usb_lib.h     ****   ENDP_TOG( epnum, USB_EP_DTOG_RX );
 189:usb_lib.h     ****   _usb_ep_write(idx, buf, size);
 190:usb_lib.h     **** }
 191:usb_lib.h     **** 
 192:usb_lib.h     **** int _usb_ep_read(uint8_t idx, uint16_t *buf);
 193:usb_lib.h     **** static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
 194:usb_lib.h     ****   return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 195:usb_lib.h     **** }
 196:usb_lib.h     **** static inline int usb_ep_read_double(uint8_t epnum, uint16_t *buf){
  87              		.loc 2 196 19 view .LVU8
  88              	.LBB5:
 197:usb_lib.h     ****   uint8_t idx = !(USB_EPx(epnum) & USB_EP_DTOG_RX);
  89              		.loc 2 197 3 view .LVU9
  90              		.loc 2 197 19 is_stmt 0 view .LVU10
  91 0004 0B4C     		ldr	r4, .L7
  92 0006 2089     		ldrh	r0, [r4, #8]
  93              	.LVL4:
  94              		.loc 2 197 17 view .LVU11
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 10


  95 0008 C0F38130 		ubfx	r0, r0, #14, #2
  96 000c 80F00100 		eor	r0, r0, #1
  97 0010 00F00100 		and	r0, r0, #1
  98              	.LVL5:
 198:usb_lib.h     ****   int res = _usb_ep_read((epnum & 0x0F)*2 + idx, buf);
  99              		.loc 2 198 3 is_stmt 1 view .LVU12
 100              		.loc 2 198 13 is_stmt 0 view .LVU13
 101 0014 6946     		mov	r1, sp
 102 0016 0430     		adds	r0, r0, #4
 103              	.LVL6:
 104              		.loc 2 198 13 view .LVU14
 105 0018 FFF7FEFF 		bl	_usb_ep_read
 106              	.LVL7:
 199:usb_lib.h     ****   ENDP_TOG( (epnum & 0x0F), USB_EP_DTOG_TX );
 107              		.loc 2 199 3 is_stmt 1 view .LVU15
 108              		.loc 2 199 3 view .LVU16
 109 001c 2389     		ldrh	r3, [r4, #8]
 110 001e 23F0F003 		bic	r3, r3, #240
 111 0022 1B05     		lsls	r3, r3, #20
 112 0024 1B0D     		lsrs	r3, r3, #20
 113 0026 43F40043 		orr	r3, r3, #32768
 114 002a 43F0C003 		orr	r3, r3, #192
 115 002e 2381     		strh	r3, [r4, #8]	@ movhi
 116              		.loc 2 199 3 view .LVU17
 200:usb_lib.h     ****   return res;
 117              		.loc 2 200 3 view .LVU18
 118              	.LVL8:
 119              		.loc 2 200 3 is_stmt 0 view .LVU19
 120              	.LBE5:
 121              	.LBE4:
 214:usb_class_midi.c ****   if(buf[0]!= SYSEX_HEADER) return;
 122              		.loc 1 214 3 is_stmt 1 view .LVU20
 218:usb_class_midi.c **** 
 123              		.loc 1 218 1 is_stmt 0 view .LVU21
 124 0030 04B0     		add	sp, sp, #16
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 8
 127              		@ sp needed
 128 0032 10BD     		pop	{r4, pc}
 129              	.L8:
 130              		.align	2
 131              	.L7:
 132 0034 005C0040 		.word	1073765376
 133              		.cfi_endproc
 134              	.LFE37:
 136              		.section	.text.usb_class_get_std_descr,"ax",%progbits
 137              		.align	1
 138              		.global	usb_class_get_std_descr
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	usb_class_get_std_descr:
 144              	.LVL9:
 145              	.LFB33:
 152:usb_class_midi.c ****   switch(descr & 0xFF00){
 146              		.loc 1 152 80 is_stmt 1 view -0
 147              		.cfi_startproc
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 11


 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 153:usb_class_midi.c ****     case DEVICE_DESCRIPTOR:
 151              		.loc 1 153 3 view .LVU23
 152 0000 00F47F43 		and	r3, r0, #65280
 153 0004 B3F5407F 		cmp	r3, #768
 154 0008 1AD0     		beq	.L10
 155 000a 0BD8     		bhi	.L11
 156 000c B3F5807F 		cmp	r3, #256
 157 0010 11D0     		beq	.L12
 158 0012 B3F5007F 		cmp	r3, #512
 159 0016 04D1     		bne	.L22
 159:usb_class_midi.c ****       *size = sizeof(USB_ConfigDescriptor);
 160              		.loc 1 159 7 view .LVU24
 159:usb_class_midi.c ****       *size = sizeof(USB_ConfigDescriptor);
 161              		.loc 1 159 13 is_stmt 0 view .LVU25
 162 0018 144B     		ldr	r3, .L24
 163 001a 0B60     		str	r3, [r1]
 160:usb_class_midi.c ****       break;
 164              		.loc 1 160 7 is_stmt 1 view .LVU26
 160:usb_class_midi.c ****       break;
 165              		.loc 1 160 13 is_stmt 0 view .LVU27
 166 001c 4423     		movs	r3, #68
 167 001e 1380     		strh	r3, [r2]	@ movhi
 161:usb_class_midi.c ****     case DEVICE_QUALIFIER_DESCRIPTOR:
 168              		.loc 1 161 7 is_stmt 1 view .LVU28
 169 0020 7047     		bx	lr
 170              	.L22:
 171 0022 7047     		bx	lr
 172              	.L11:
 153:usb_class_midi.c ****     case DEVICE_DESCRIPTOR:
 173              		.loc 1 153 3 is_stmt 0 view .LVU29
 174 0024 B3F5C06F 		cmp	r3, #1536
 175 0028 04D1     		bne	.L23
 163:usb_class_midi.c ****       *size = USB_DeviceQualifierDescriptor[0];
 176              		.loc 1 163 7 is_stmt 1 view .LVU30
 163:usb_class_midi.c ****       *size = USB_DeviceQualifierDescriptor[0];
 177              		.loc 1 163 13 is_stmt 0 view .LVU31
 178 002a 114B     		ldr	r3, .L24+4
 179 002c 0B60     		str	r3, [r1]
 164:usb_class_midi.c ****       break;
 180              		.loc 1 164 7 is_stmt 1 view .LVU32
 164:usb_class_midi.c ****       break;
 181              		.loc 1 164 13 is_stmt 0 view .LVU33
 182 002e 0A23     		movs	r3, #10
 183 0030 1380     		strh	r3, [r2]	@ movhi
 165:usb_class_midi.c ****     case STRING_DESCRIPTOR:
 184              		.loc 1 165 7 is_stmt 1 view .LVU34
 185 0032 7047     		bx	lr
 186              	.L23:
 165:usb_class_midi.c ****     case STRING_DESCRIPTOR:
 187              		.loc 1 165 7 is_stmt 0 view .LVU35
 188 0034 7047     		bx	lr
 189              	.L12:
 155:usb_class_midi.c ****       *size = sizeof(USB_DeviceDescriptor);
 190              		.loc 1 155 7 is_stmt 1 view .LVU36
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 12


 155:usb_class_midi.c ****       *size = sizeof(USB_DeviceDescriptor);
 191              		.loc 1 155 13 is_stmt 0 view .LVU37
 192 0036 0F4B     		ldr	r3, .L24+8
 193 0038 0B60     		str	r3, [r1]
 156:usb_class_midi.c ****       break;
 194              		.loc 1 156 7 is_stmt 1 view .LVU38
 156:usb_class_midi.c ****       break;
 195              		.loc 1 156 13 is_stmt 0 view .LVU39
 196 003a 1223     		movs	r3, #18
 197 003c 1380     		strh	r3, [r2]	@ movhi
 157:usb_class_midi.c ****     case CONFIGURATION_DESCRIPTOR:
 198              		.loc 1 157 7 is_stmt 1 view .LVU40
 199 003e 7047     		bx	lr
 200              	.L10:
 167:usb_class_midi.c ****         case STD_DESCR_LANG:
 201              		.loc 1 167 7 view .LVU41
 202 0040 C0B2     		uxtb	r0, r0
 203              	.LVL10:
 167:usb_class_midi.c ****         case STD_DESCR_LANG:
 204              		.loc 1 167 7 is_stmt 0 view .LVU42
 205 0042 0328     		cmp	r0, #3
 206 0044 08D8     		bhi	.L9
 207 0046 DFE800F0 		tbb	[pc, r0]
 208              	.L17:
 209 004a 02       		.byte	(.L20-.L17)/2
 210 004b 08       		.byte	(.L19-.L17)/2
 211 004c 0B       		.byte	(.L18-.L17)/2
 212 004d 0E       		.byte	(.L16-.L17)/2
 213              		.p2align 1
 214              	.L20:
 169:usb_class_midi.c ****           break;
 215              		.loc 1 169 11 is_stmt 1 view .LVU43
 169:usb_class_midi.c ****           break;
 216              		.loc 1 169 17 is_stmt 0 view .LVU44
 217 004e 0A4B     		ldr	r3, .L24+12
 218 0050 0B60     		str	r3, [r1]
 170:usb_class_midi.c ****         case STD_DESCR_VEND:
 219              		.loc 1 170 11 is_stmt 1 view .LVU45
 220              	.L21:
 183:usb_class_midi.c ****       break;
 221              		.loc 1 183 7 view .LVU46
 183:usb_class_midi.c ****       break;
 222              		.loc 1 183 32 is_stmt 0 view .LVU47
 223 0052 0B68     		ldr	r3, [r1]
 224 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 183:usb_class_midi.c ****       break;
 225              		.loc 1 183 13 view .LVU48
 226 0056 1380     		strh	r3, [r2]	@ movhi
 184:usb_class_midi.c ****     default:
 227              		.loc 1 184 7 is_stmt 1 view .LVU49
 228              	.L9:
 188:usb_class_midi.c **** 
 229              		.loc 1 188 1 is_stmt 0 view .LVU50
 230 0058 7047     		bx	lr
 231              	.L19:
 172:usb_class_midi.c ****           break;
 232              		.loc 1 172 11 is_stmt 1 view .LVU51
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 13


 172:usb_class_midi.c ****           break;
 233              		.loc 1 172 17 is_stmt 0 view .LVU52
 234 005a 084B     		ldr	r3, .L24+16
 235 005c 0B60     		str	r3, [r1]
 173:usb_class_midi.c ****         case STD_DESCR_PROD:
 236              		.loc 1 173 11 is_stmt 1 view .LVU53
 237 005e F8E7     		b	.L21
 238              	.L18:
 175:usb_class_midi.c ****           break;
 239              		.loc 1 175 11 view .LVU54
 175:usb_class_midi.c ****           break;
 240              		.loc 1 175 17 is_stmt 0 view .LVU55
 241 0060 074B     		ldr	r3, .L24+20
 242 0062 0B60     		str	r3, [r1]
 176:usb_class_midi.c ****         case STD_DESCR_SN:
 243              		.loc 1 176 11 is_stmt 1 view .LVU56
 244 0064 F5E7     		b	.L21
 245              	.L16:
 178:usb_class_midi.c ****           break;
 246              		.loc 1 178 11 view .LVU57
 178:usb_class_midi.c ****           break;
 247              		.loc 1 178 17 is_stmt 0 view .LVU58
 248 0066 074B     		ldr	r3, .L24+24
 249 0068 0B60     		str	r3, [r1]
 179:usb_class_midi.c ****         default:
 250              		.loc 1 179 11 is_stmt 1 view .LVU59
 251 006a F2E7     		b	.L21
 252              	.L25:
 253              		.align	2
 254              	.L24:
 255 006c 00000000 		.word	.LANCHOR1
 256 0070 00000000 		.word	.LANCHOR2
 257 0074 00000000 		.word	.LANCHOR0
 258 0078 00000000 		.word	.LANCHOR3
 259 007c 00000000 		.word	.LANCHOR4
 260 0080 00000000 		.word	.LANCHOR5
 261 0084 00000000 		.word	.LANCHOR6
 262              		.cfi_endproc
 263              	.LFE33:
 265              		.section	.text.usb_class_ep0_in,"ax",%progbits
 266              		.align	1
 267              		.global	usb_class_ep0_in
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	usb_class_ep0_in:
 273              	.LVL11:
 274              	.LFB34:
 193:usb_class_midi.c ****   if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 275              		.loc 1 193 71 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 194:usb_class_midi.c ****     
 280              		.loc 1 194 3 view .LVU61
 196:usb_class_midi.c ****   return 0;
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 14


 281              		.loc 1 196 3 view .LVU62
 197:usb_class_midi.c **** }
 282              		.loc 1 197 3 view .LVU63
 198:usb_class_midi.c **** 
 283              		.loc 1 198 1 is_stmt 0 view .LVU64
 284 0000 0020     		movs	r0, #0
 285              	.LVL12:
 198:usb_class_midi.c **** 
 286              		.loc 1 198 1 view .LVU65
 287 0002 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE34:
 291              		.section	.text.usb_class_ep0_out,"ax",%progbits
 292              		.align	1
 293              		.global	usb_class_ep0_out
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 298              	usb_class_ep0_out:
 299              	.LVL13:
 300              	.LFB35:
 200:usb_class_midi.c ****   if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 301              		.loc 1 200 78 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 201:usb_class_midi.c ****     
 306              		.loc 1 201 3 view .LVU67
 203:usb_class_midi.c ****   return 0;
 307              		.loc 1 203 3 view .LVU68
 204:usb_class_midi.c **** }
 308              		.loc 1 204 3 view .LVU69
 205:usb_class_midi.c **** 
 309              		.loc 1 205 1 is_stmt 0 view .LVU70
 310 0000 0020     		movs	r0, #0
 311              	.LVL14:
 205:usb_class_midi.c **** 
 312              		.loc 1 205 1 view .LVU71
 313 0002 7047     		bx	lr
 314              		.cfi_endproc
 315              	.LFE35:
 317              		.section	.text.usb_class_init,"ax",%progbits
 318              		.align	1
 319              		.global	usb_class_init
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	usb_class_init:
 325              	.LFB39:
 224:usb_class_midi.c **** 
 225:usb_class_midi.c **** void usb_class_init(){
 326              		.loc 1 225 22 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 15


 331              	.LCFI3:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 226:usb_class_midi.c ****   usb_ep_init( ENDP_CTL_NUM | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE, ctl_callback );
 335              		.loc 1 226 3 view .LVU73
 336 0002 0C4B     		ldr	r3, .L30
 337 0004 0822     		movs	r2, #8
 338 0006 0321     		movs	r1, #3
 339 0008 8320     		movs	r0, #131
 340 000a FFF7FEFF 		bl	usb_ep_init
 341              	.LVL15:
 227:usb_class_midi.c ****   
 228:usb_class_midi.c ****   usb_ep_init_double( ENDP_DATA_IN | 0x80, USB_ENDP_BULK, ENDP_DATA_SIZE, data_in_callback );
 342              		.loc 1 228 3 view .LVU74
 343 000e 0A4B     		ldr	r3, .L30+4
 344 0010 1022     		movs	r2, #16
 345 0012 0221     		movs	r1, #2
 346 0014 8120     		movs	r0, #129
 347 0016 FFF7FEFF 		bl	usb_ep_init_double
 348              	.LVL16:
 229:usb_class_midi.c ****   usb_ep_init_double( ENDP_DATA_OUT, USB_ENDP_BULK, ENDP_DATA_SIZE, data_out_callback );
 349              		.loc 1 229 3 view .LVU75
 350 001a 084B     		ldr	r3, .L30+8
 351 001c 1022     		movs	r2, #16
 352 001e 0221     		movs	r1, #2
 353 0020 0846     		mov	r0, r1
 354 0022 FFF7FEFF 		bl	usb_ep_init_double
 355              	.LVL17:
 230:usb_class_midi.c ****   init_message_buff(&out_buf, out_buf_data, 16);
 356              		.loc 1 230 3 view .LVU76
 357 0026 1022     		movs	r2, #16
 358 0028 0549     		ldr	r1, .L30+12
 359 002a 0648     		ldr	r0, .L30+16
 360 002c FFF7FEFF 		bl	init_message_buff
 361              	.LVL18:
 231:usb_class_midi.c **** }
 362              		.loc 1 231 1 is_stmt 0 view .LVU77
 363 0030 08BD     		pop	{r3, pc}
 364              	.L31:
 365 0032 00BF     		.align	2
 366              	.L30:
 367 0034 00000000 		.word	ctl_callback
 368 0038 00000000 		.word	data_in_callback
 369 003c 00000000 		.word	data_out_callback
 370 0040 00000000 		.word	.LANCHOR7
 371 0044 00000000 		.word	.LANCHOR8
 372              		.cfi_endproc
 373              	.LFE39:
 375              		.section	.text.usb_class_poll,"ax",%progbits
 376              		.align	1
 377              		.global	usb_class_poll
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	usb_class_poll:
 383              	.LFB40:
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 16


 232:usb_class_midi.c **** 
 233:usb_class_midi.c **** void usb_class_poll(){
 384              		.loc 1 233 22 is_stmt 1 view -0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 234:usb_class_midi.c ****     while(out_buf.bytes_avail>0) {
 388              		.loc 1 234 5 view .LVU79
 389              		.loc 1 234 10 view .LVU80
 390              		.loc 1 234 18 is_stmt 0 view .LVU81
 391 0000 154B     		ldr	r3, .L41
 392 0002 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 393              		.loc 1 234 10 view .LVU82
 394 0004 3BB3     		cbz	r3, .L39
 233:usb_class_midi.c ****     while(out_buf.bytes_avail>0) {
 395              		.loc 1 233 22 view .LVU83
 396 0006 00B5     		push	{lr}
 397              	.LCFI4:
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 14, -4
 400 0008 83B0     		sub	sp, sp, #12
 401              	.LCFI5:
 402              		.cfi_def_cfa_offset 16
 403 000a 02E0     		b	.L35
 404              	.L33:
 405              		.loc 1 234 10 is_stmt 1 view .LVU84
 406              		.loc 1 234 18 is_stmt 0 view .LVU85
 407 000c 124B     		ldr	r3, .L41
 408 000e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 409              		.loc 1 234 10 view .LVU86
 410 0010 F3B1     		cbz	r3, .L40
 411              	.L35:
 412              	.LBB9:
 235:usb_class_midi.c ****         USB_ALIGN uint8_t msg[4];
 413              		.loc 1 235 9 is_stmt 1 view .LVU87
 236:usb_class_midi.c ****         get_next_message(&out_buf, msg, 4);
 414              		.loc 1 236 9 view .LVU88
 415 0012 0422     		movs	r2, #4
 416 0014 0DEB0201 		add	r1, sp, r2
 417 0018 0F48     		ldr	r0, .L41
 418 001a FFF7FEFF 		bl	get_next_message
 419              	.LVL19:
 237:usb_class_midi.c ****         if(msg[0] != 0x00) usb_ep_write_double( ENDP_DATA_IN | 0x80, (uint16_t*)msg, sizeof(msg));
 420              		.loc 1 237 9 view .LVU89
 421              		.loc 1 237 15 is_stmt 0 view .LVU90
 422 001e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 423              		.loc 1 237 11 view .LVU91
 424 0022 002B     		cmp	r3, #0
 425 0024 F2D0     		beq	.L33
 426              		.loc 1 237 28 is_stmt 1 view .LVU92
 427              	.LVL20:
 428              	.LBB10:
 429              	.LBI10:
 184:usb_lib.h     ****   epnum &= 0x0F;
 430              		.loc 2 184 20 view .LVU93
 431              	.LBB11:
 185:usb_lib.h     ****   uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 17


 432              		.loc 2 185 3 view .LVU94
 186:usb_lib.h     ****   idx += 2*epnum;
 433              		.loc 2 186 3 view .LVU95
 186:usb_lib.h     ****   idx += 2*epnum;
 434              		.loc 2 186 21 is_stmt 0 view .LVU96
 435 0026 0D4A     		ldr	r2, .L41+4
 436 0028 9088     		ldrh	r0, [r2, #4]
 186:usb_lib.h     ****   idx += 2*epnum;
 437              		.loc 2 186 17 view .LVU97
 438 002a C0F38030 		ubfx	r0, r0, #14, #1
 439              	.LVL21:
 187:usb_lib.h     ****   ENDP_TOG( epnum, USB_EP_DTOG_RX );
 440              		.loc 2 187 3 is_stmt 1 view .LVU98
 188:usb_lib.h     ****   _usb_ep_write(idx, buf, size);
 441              		.loc 2 188 3 view .LVU99
 188:usb_lib.h     ****   _usb_ep_write(idx, buf, size);
 442              		.loc 2 188 3 view .LVU100
 443 002e 9388     		ldrh	r3, [r2, #4]
 444 0030 23F0F003 		bic	r3, r3, #240
 445 0034 1B05     		lsls	r3, r3, #20
 446 0036 1B0D     		lsrs	r3, r3, #20
 447 0038 43F44043 		orr	r3, r3, #49152
 448 003c 43F08003 		orr	r3, r3, #128
 449 0040 9380     		strh	r3, [r2, #4]	@ movhi
 188:usb_lib.h     ****   _usb_ep_write(idx, buf, size);
 450              		.loc 2 188 3 view .LVU101
 189:usb_lib.h     **** }
 451              		.loc 2 189 3 view .LVU102
 452 0042 0422     		movs	r2, #4
 453 0044 0DEB0201 		add	r1, sp, r2
 454 0048 0230     		adds	r0, r0, #2
 455              	.LVL22:
 189:usb_lib.h     **** }
 456              		.loc 2 189 3 is_stmt 0 view .LVU103
 457 004a FFF7FEFF 		bl	_usb_ep_write
 458              	.LVL23:
 190:usb_lib.h     **** 
 459              		.loc 2 190 1 view .LVU104
 460 004e DDE7     		b	.L33
 461              	.L40:
 462              	.LBE11:
 463              	.LBE10:
 464              	.LBE9:
 238:usb_class_midi.c ****     }
 239:usb_class_midi.c **** }
 465              		.loc 1 239 1 view .LVU105
 466 0050 03B0     		add	sp, sp, #12
 467              	.LCFI6:
 468              		.cfi_def_cfa_offset 4
 469              		@ sp needed
 470 0052 5DF804FB 		ldr	pc, [sp], #4
 471              	.L39:
 472              	.LCFI7:
 473              		.cfi_def_cfa_offset 0
 474              		.cfi_restore 14
 475 0056 7047     		bx	lr
 476              	.L42:
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 18


 477              		.align	2
 478              	.L41:
 479 0058 00000000 		.word	.LANCHOR8
 480 005c 005C0040 		.word	1073765376
 481              		.cfi_endproc
 482              	.LFE40:
 484              		.global	out_buf
 485              		.global	out_buf_data
 486              		.section	.bss.out_buf,"aw",%nobits
 487              		.align	2
 488              		.set	.LANCHOR8,. + 0
 491              	out_buf:
 492 0000 00000000 		.space	12
 492      00000000 
 492      00000000 
 493              		.section	.bss.out_buf_data,"aw",%nobits
 494              		.align	2
 495              		.set	.LANCHOR7,. + 0
 498              	out_buf_data:
 499 0000 00000000 		.space	16
 499      00000000 
 499      00000000 
 499      00000000 
 500              		.section	.rodata.USB_ConfigDescriptor,"a"
 501              		.align	1
 502              		.set	.LANCHOR1,. + 0
 505              	USB_ConfigDescriptor:
 506 0000 09024400 		.ascii	"\011\002D\000\002\001\000\2002\011\004\000\000\001\001"
 506      02010080 
 506      32090400 
 506      000101
 507 000f 03000007 		.ascii	"\003\000\000\007$\001\000\001,\000\006$\002\001\001"
 507      24010001 
 507      2C000624 
 507      020101
 508 001e 00092403 		.ascii	"\000\011$\003\001\002\001\002\001\000\011\005\201\003"
 508      01020102 
 508      01000905 
 508      8103
 509 002c 10000A00 		.ascii	"\020\000\012\000\000\005%\001\001\001\011\005\001\003"
 509      00052501 
 509      01010905 
 509      0103
 510 003a 10000A00 		.ascii	"\020\000\012\000\000\005%\001\001\002"
 510      00052501 
 510      0102
 511              		.section	.rodata.USB_DeviceDescriptor,"a"
 512              		.align	1
 513              		.set	.LANCHOR0,. + 0
 516              	USB_DeviceDescriptor:
 517 0000 12011001 		.ascii	"\022\001\020\001\000\000\000\010\300\026\337\005\001"
 517      00000008 
 517      C016DF05 
 517      01
 518 000d 00010203 		.ascii	"\000\001\002\003\001"
 518      01
 519              		.section	.rodata.USB_DeviceQualifierDescriptor,"a"
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 19


 520              		.align	1
 521              		.set	.LANCHOR2,. + 0
 524              	USB_DeviceQualifierDescriptor:
 525 0000 0A060002 		.ascii	"\012\006\000\002\000\000\000\010\001\000"
 525      00000008 
 525      0100
 526              		.section	.rodata.USB_StringLangDescriptor,"a"
 527              		.align	1
 528              		.set	.LANCHOR3,. + 0
 531              	USB_StringLangDescriptor:
 532 0000 04       		.byte	4
 533 0001 03       		.byte	3
 534 0002 0904     		.ascii	"\011\004"
 535              		.section	.rodata.USB_StringManufacturingDescriptor,"a"
 536              		.align	1
 537              		.set	.LANCHOR4,. + 0
 540              	USB_StringManufacturingDescriptor:
 541 0000 18       		.byte	24
 542 0001 03       		.byte	3
 543 0002 70006900 		.ascii	"p\000i\000o\000t\000r\000o\000s\000i\000o\000t\000r"
 543      6F007400 
 543      72006F00 
 543      73006900 
 543      6F007400 
 544 0017 00       		.ascii	"\000"
 545              		.section	.rodata.USB_StringProdDescriptor,"a"
 546              		.align	1
 547              		.set	.LANCHOR5,. + 0
 550              	USB_StringProdDescriptor:
 551 0000 12       		.byte	18
 552 0001 03       		.byte	3
 553 0002 55005300 		.ascii	"U\000S\000B\000 \000M\000I\000D\000I\000"
 553      42002000 
 553      4D004900 
 553      44004900 
 554              		.section	.rodata.USB_StringSerialDescriptor,"a"
 555              		.align	1
 556              		.set	.LANCHOR6,. + 0
 559              	USB_StringSerialDescriptor:
 560 0000 04       		.byte	4
 561 0001 03       		.byte	3
 562 0002 3100     		.ascii	"1\000"
 563              		.text
 564              	.Letext0:
 565              		.file 3 "/usr/local/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_
 566              		.file 4 "/usr/local/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 567              		.file 5 "CMSIS/Inc/stm32f103xb.h"
 568              		.file 6 "midi/midi_message_buffer.h"
ARM GAS  /var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_class_midi.c
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:18     .text.ctl_callback:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:24     .text.ctl_callback:0000000000000000 ctl_callback
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:39     .text.data_in_callback:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:45     .text.data_in_callback:0000000000000000 data_in_callback
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:59     .text.data_out_callback:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:65     .text.data_out_callback:0000000000000000 data_out_callback
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:132    .text.data_out_callback:0000000000000034 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:137    .text.usb_class_get_std_descr:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:143    .text.usb_class_get_std_descr:0000000000000000 usb_class_get_std_descr
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:209    .text.usb_class_get_std_descr:000000000000004a $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:213    .text.usb_class_get_std_descr:000000000000004e $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:255    .text.usb_class_get_std_descr:000000000000006c $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:266    .text.usb_class_ep0_in:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:272    .text.usb_class_ep0_in:0000000000000000 usb_class_ep0_in
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:292    .text.usb_class_ep0_out:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:298    .text.usb_class_ep0_out:0000000000000000 usb_class_ep0_out
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:318    .text.usb_class_init:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:324    .text.usb_class_init:0000000000000000 usb_class_init
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:367    .text.usb_class_init:0000000000000034 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:376    .text.usb_class_poll:0000000000000000 $t
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:382    .text.usb_class_poll:0000000000000000 usb_class_poll
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:479    .text.usb_class_poll:0000000000000058 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:491    .bss.out_buf:0000000000000000 out_buf
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:498    .bss.out_buf_data:0000000000000000 out_buf_data
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:487    .bss.out_buf:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:494    .bss.out_buf_data:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:501    .rodata.USB_ConfigDescriptor:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:505    .rodata.USB_ConfigDescriptor:0000000000000000 USB_ConfigDescriptor
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:512    .rodata.USB_DeviceDescriptor:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:516    .rodata.USB_DeviceDescriptor:0000000000000000 USB_DeviceDescriptor
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:520    .rodata.USB_DeviceQualifierDescriptor:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:524    .rodata.USB_DeviceQualifierDescriptor:0000000000000000 USB_DeviceQualifierDescriptor
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:527    .rodata.USB_StringLangDescriptor:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:531    .rodata.USB_StringLangDescriptor:0000000000000000 USB_StringLangDescriptor
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:536    .rodata.USB_StringManufacturingDescriptor:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:540    .rodata.USB_StringManufacturingDescriptor:0000000000000000 USB_StringManufacturingDescriptor
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:546    .rodata.USB_StringProdDescriptor:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:550    .rodata.USB_StringProdDescriptor:0000000000000000 USB_StringProdDescriptor
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:555    .rodata.USB_StringSerialDescriptor:0000000000000000 $d
/var/folders/9x/7nl7qcbn3r12rp7phz107hx40000gp/T//ccHf1JEp.s:559    .rodata.USB_StringSerialDescriptor:0000000000000000 USB_StringSerialDescriptor

UNDEFINED SYMBOLS
_usb_ep_read
usb_ep_init
usb_ep_init_double
init_message_buff
get_next_message
_usb_ep_write
